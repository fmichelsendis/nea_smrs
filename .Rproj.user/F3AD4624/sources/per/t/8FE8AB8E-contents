---
title: "Contacts"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE,warning = FALSE, error = FALSE)
library(DT)
library(data.table)
library(tidyverse)
library(shiny) 
library(stringr)
library(plotly)
library(ggplot2)
library(shinydashboard)
library(shinythemes)
library(shinyjs)  
library(splitstackshape)
library(devtools)
library(lubridate)
library(wordcloud)
library(wordcloud2)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library(igraph)
library(networkD3)
library(gender)

```

## Plots
 
```{r  read}
df<-fread("csv/connections.csv")%>%
  mutate(
    DATE=lubridate::parse_date_time(DATE, orders = c('dmy')),
    MONTH_YEAR = paste0(month(DATE),"-",year(DATE)),
    YEAR= year(DATE)
    )

g<-ggplot(df, aes(x=YEAR, fill=YEAR)) + 
  geom_histogram(stat = 'count')+
  theme_light() +
  coord_flip()

ggplotly(g)
```


## Wordcloud

```{r  cloud}


docs <- Corpus(VectorSource(df$ORG))
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
docs <- tm_map(docs, removeWords, stopwords("french"))
docs <- tm_map(docs, removeWords, stopwords("spanish"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("oecdocde", "oecdocde", "ocdeoecd",  "ltd", "inc", "auprÃ¨s")) 
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)

dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)

# head(d, 50)

set.seed(1234553)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
          max.words=900, random.order=FALSE, rot.per=0.35, 
          colors=brewer.pal(12, name = "Paired"))
 


```

## Predict Gender 

```{r, gender}

#using library gender

gdf<-gender(names =df$FIRST)%>%
  select(name, gender)%>%
  transmute(FIRST=name,
            GENDER=gender)

dfg<-merge(x = df, y = gdf, by =.EACHI c('FIRST'))


g<-ggplot(gdf, aes(x=gender))+
  geom_bar(stat='count')




```


## Network

```{r, net}

# Libraries
library(igraph)
library(networkD3)

# create a dataset:
data <- data_frame(
  from=c("A", "A", "B", "D", "C", "D", "E", "B", "C", "D", "K", "A", "M"),
  to=c("B", "E", "F", "A", "C", "A", "B", "Z", "A", "C", "A", "B", "K")
)

# Plot
p <- simpleNetwork(data, height="100px", width="100px",        
        Source = 1,                 # column number of source
        Target = 2,                 # column number of target
        linkDistance = 10,          # distance between node. Increase this value to have more space between nodes
        charge = -900,                # numeric value indicating either the strength of the node repulsion (negative value) or attraction (positive value)
        fontSize = 14,               # size of the node names
        fontFamily = "serif",       # font og node names
        linkColour = "#666",        # colour of edges, MUST be a common colour for the whole graph
        nodeColour = "#69b3a2",     # colour of nodes, MUST be a common colour for the whole graph
        opacity = 0.9,              # opacity of nodes. 0=transparent. 1=no transparency
        zoom = T                    # Can you zoom on the figure?
        )

p

```

